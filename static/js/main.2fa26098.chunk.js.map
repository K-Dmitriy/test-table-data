{"version":3,"sources":["reducer.js","context.js","components/Form/Form.jsx","services/Service.js","components/Form/index.js","components/Preloader/index.js","components/Preloader/Preloader.jsx","components/RowData/index.js","components/RowData/RowData.jsx","components/TableData/index.js","components/TableData/TableData.jsx","components/AppData/index.js","components/AppData/AppData.jsx","components/App/App.jsx","reportWebVitals.ts","index.tsx"],"names":["reducer","state","type","payload","data","tables","isLoad","isRequestSend","map","table","id","colNames","tableIds","dataUrl","console","error","DataContext","createContext","initState","ContexProvider","children","useReducer","value","dispatch","addTable","replacementTable","sendRequest","addColNames","names","setDataUrl","url","addIdTable","Provider","dataService","URL","a","fetch","res","ok","Error","status","json","Form","useContext","onSubmit","evt","preventDefault","getData","then","Object","keys","length","alert","onAddHandler","name","placeholder","onChange","target","Preloader","RowData","item","index","TableData","className","border","key","AppData","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OA4CeA,MA5Cf,SAAiBC,EAAjB,GAA4C,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QAC/B,OAAQD,GACP,IAAK,YACJ,OAAO,2BACHD,GADJ,IAECG,KAAK,2BAAMH,EAAMG,MAAb,IAAmBC,OAAO,GAAD,mBAAMJ,EAAMG,KAAKC,QAAjB,CAAyBF,MACtDG,QAAQ,EACRC,eAAe,IAGjB,IAAK,oBACJ,IAAIF,EAASJ,EAAMG,KAAKC,OAAOG,KAAI,SAACC,GACnC,OAAIA,EAAMC,KAAOP,EAAQO,GACjBP,EAGDM,KAGR,OAAO,2BACHR,GADJ,IAECG,KAAK,2BAAMH,EAAMG,MAAb,IAAmBC,WACvBC,QAAQ,EACRC,eAAe,IAGjB,IAAK,eACJ,OAAO,2BAAKN,GAAZ,IAAmBM,eAAe,IAEnC,IAAK,gBACJ,OAAO,2BAAKN,GAAZ,IAAmBU,SAAUR,IAE9B,IAAK,eACJ,OAAO,2BAAKF,GAAZ,IAAmBW,SAAS,GAAD,mBAAMX,EAAMW,UAAZ,CAAsBT,MAElD,IAAK,eACJ,OAAO,2BAAKF,GAAZ,IAAmBY,QAASV,IAE7B,QAEC,OADAW,QAAQC,MAAM,kBACPd,I,OCrCGe,EAAcC,0BAErBC,EAAY,CACjBd,KAAM,CACLC,OAAQ,IAITC,QAAQ,EACRC,eAAe,EACfM,QAAS,IAGGM,EAAiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChC,EAA0BC,qBAAWrB,EAASkB,GAA9C,mBAAOI,EAAP,KAAcC,EAAd,KAWA,OATAD,EAAME,SAAW,SAACd,EAAID,EAAOE,GAAZ,OAChBY,EAAS,CAAErB,KAAM,YAAaC,QAAS,CAAEO,KAAID,QAAOE,eACrDW,EAAMG,iBAAmB,SAACf,EAAID,EAAOE,GAAZ,OACxBY,EAAS,CAAErB,KAAM,oBAAqBC,QAAS,CAAEO,KAAID,QAAOE,eAC7DW,EAAMI,YAAc,kBAAMH,EAAS,CAAErB,KAAM,kBAC3CoB,EAAMK,YAAc,SAACC,GAAD,OAAWL,EAAS,CAAErB,KAAM,gBAAiBC,QAASyB,KAC1EN,EAAMO,WAAa,SAACC,GAAD,OAASP,EAAS,CAAErB,KAAM,eAAgBC,QAAS2B,KACtER,EAAMS,WAAa,SAACrB,GAAD,OAAQa,EAAS,CAAErB,KAAM,eAAgBC,QAASO,KAE9D,cAACM,EAAYgB,SAAb,CAAsBV,MAAOA,EAA7B,SAAqCF,K,uCCxBvCa,EAAc,I,8HCHnB,WAAcC,GAAd,eAAAC,EAAA,sEACmBC,MAAMF,GADzB,WACOG,EADP,QAGUC,GAHV,sBAIQ,IAAIC,MAAJ,0BAA6BL,EAA7B,sBAA8CG,EAAIG,SAJ1D,uBAOcH,EAAII,OAPlB,mF,+DCCcC,EFIF,SAAC,GAAY,IAAVhC,EAAS,EAATA,GACf,EAA+EiC,qBAAW3B,GAAlFZ,EAAR,EAAQA,KAAMoB,EAAd,EAAcA,SAAUE,EAAxB,EAAwBA,YAAab,EAArC,EAAqCA,QAASgB,EAA9C,EAA8CA,WAAYJ,EAA1D,EAA0DA,iBAmB1D,OACC,sBAAMmB,SAAU,SAACC,GAAD,OAlBI,SAACA,EAAKnC,GAC1BmC,EAAIC,iBACAjC,GACHa,IACAO,EAAYc,QAAQlC,GAASmC,MAAK,SAACX,GAC9B3B,EACHe,EAAiBf,EAAI2B,EAAKY,OAAOC,KAAKb,EAAI,KAE1Cb,EAASpB,EAAKC,OAAO8C,OAAS,IAAMtC,EAASwB,EAAKY,OAAOC,KAAKb,EAAI,KAEnER,EAAW,QAGZuB,MAAM,uBAKkBC,CAAaR,EAAKnC,IAA3C,SACC,qCACC,+CACA,8CAEC,uBACCR,KAAK,OACLoD,KAAK,UACLC,YAAY,sBACZjC,MAAOT,EACP2C,SAAU,SAACX,GAAD,OAAShB,EAAWgB,EAAIY,OAAOnC,aAG3C,wBAAQpB,KAAK,SAAb,6BGtCWwD,ECFG,WACjB,OAAO,8CCCOC,ECFC,SAAC,GAAe,IAAblD,EAAY,EAAZA,MAClB,OACC,mCACEA,EAAMA,MAAMD,KAAI,SAACoD,EAAMC,GAAP,OAChB,6BACEpD,EAAME,SAASH,KAAI,SAAC8C,GAAD,OACnB,6BAA8B,GAAKM,EAAKN,IAA/BO,EAAQ,IAAMP,OAFhBM,EAAKlD,UCFHoD,G,MCIG,SAAC,GAAY,IAAVpD,EAAS,EAATA,GACZN,EAASuC,qBAAW3B,GAApBZ,KAER,OACC,qBAAK2D,UAAU,kBAAf,SACE3D,EAAKC,OAAOG,KAAI,SAACC,GAAD,OAChB,wBAAsBuD,OAAO,IAA7B,UACC,gCACC,6BACEvD,EAAMC,KAAOA,EAAKD,EAAME,SAASH,KAAI,SAACyD,GAAD,OAAS,6BAAeA,GAANA,MAAmB,SAG7E,gCAAQxD,EAAMC,KAAOA,EAAK,cAAC,EAAD,CAASA,GAAIA,EAAID,MAAOA,IAAY,SANnDA,EAAMC,WCVPwD,ECIC,SAAC,GAAY,IAAVxD,EAAS,EAATA,GAClB,EAAkCiC,qBAAW3B,GAArCV,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,cAEhB,OACC,qCACC,cAAC,EAAD,CAAMG,GAAIA,IACTJ,EAAS,cAAC,EAAD,CAAWI,GAAIA,IAASH,GAAiB,cAAC,EAAD,Q,MCMvC4D,MAXf,WACC,IAAQ/D,EAASuC,qBAAW3B,GAApBZ,KAER,OACC,uBAAM2D,UAAU,MAAhB,UACE3D,EAAKC,OAAO8C,OAAS/C,EAAKC,OAAOG,KAAI,SAACC,GAAD,OAAW,cAAC,EAAD,CAAwBC,GAAID,EAAMC,IAApBD,EAAMC,OAAwB,KAC7F,cAAC,EAAD,QCCY0D,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,UACC,cAAC,EAAD,QAGDC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2fa26098.chunk.js","sourcesContent":["function reducer(state, { type, payload }) {\r\n\tswitch (type) {\r\n\t\tcase 'add-table':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: { ...state.data, tables: [...state.data.tables, payload] },\r\n\t\t\t\tisLoad: true,\r\n\t\t\t\tisRequestSend: false,\r\n\t\t\t};\r\n\r\n\t\tcase 'replacement-table':\r\n\t\t\tlet tables = state.data.tables.map((table) => {\r\n\t\t\t\tif (table.id === payload.id) {\r\n\t\t\t\t\treturn payload;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn table;\r\n\t\t\t});\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: { ...state.data, tables },\r\n\t\t\t\tisLoad: true,\r\n\t\t\t\tisRequestSend: false,\r\n\t\t\t};\r\n\r\n\t\tcase 'send-request':\r\n\t\t\treturn { ...state, isRequestSend: true };\r\n\r\n\t\tcase 'add-col-names':\r\n\t\t\treturn { ...state, colNames: payload };\r\n\r\n\t\tcase 'add-id-table':\r\n\t\t\treturn { ...state, tableIds: [...state.tableIds, payload] };\r\n\r\n\t\tcase 'set-data-url':\r\n\t\t\treturn { ...state, dataUrl: payload };\r\n\r\n\t\tdefault:\r\n\t\t\tconsole.error('Unknown action');\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default reducer;\r\n","import { createContext, useReducer } from 'react';\r\nimport reducer from './reducer';\r\n\r\nexport const DataContext = createContext();\r\n\r\nconst initState = {\r\n\tdata: {\r\n\t\ttables: [\r\n\t\t\t// { id: '', table: [], colNames: [] }\r\n\t\t],\r\n\t},\r\n\tisLoad: false,\r\n\tisRequestSend: false,\r\n\tdataUrl: '',\r\n};\r\n\r\nexport const ContexProvider = ({ children }) => {\r\n\tconst [value, dispatch] = useReducer(reducer, initState);\r\n\r\n\tvalue.addTable = (id, table, colNames) =>\r\n\t\tdispatch({ type: 'add-table', payload: { id, table, colNames } });\r\n\tvalue.replacementTable = (id, table, colNames) =>\r\n\t\tdispatch({ type: 'replacement-table', payload: { id, table, colNames } });\r\n\tvalue.sendRequest = () => dispatch({ type: 'send-request' });\r\n\tvalue.addColNames = (names) => dispatch({ type: 'add-col-names', payload: names });\r\n\tvalue.setDataUrl = (url) => dispatch({ type: 'set-data-url', payload: url });\r\n\tvalue.addIdTable = (id) => dispatch({ type: 'add-id-table', payload: id });\r\n\r\n\treturn <DataContext.Provider value={value}>{children}</DataContext.Provider>;\r\n};\r\n","import { useContext } from 'react';\r\nimport { DataContext } from '../../context';\r\nimport Service from '../../services/Service';\r\n\r\nconst dataService = new Service();\r\n\r\nconst Form = ({ id }) => {\r\n\tconst { data, addTable, sendRequest, dataUrl, setDataUrl, replacementTable } = useContext(DataContext);\r\n\r\n\tconst onAddHandler = (evt, id) => {\r\n\t\tevt.preventDefault();\r\n\t\tif (dataUrl) {\r\n\t\t\tsendRequest();\r\n\t\t\tdataService.getData(dataUrl).then((res) => {\r\n\t\t\t\tif (id) {\r\n\t\t\t\t\treplacementTable(id, res, Object.keys(res[0]));\r\n\t\t\t\t} else {\r\n\t\t\t\t\taddTable(data.tables.length + '.' + dataUrl, res, Object.keys(res[0]));\r\n\t\t\t\t}\r\n\t\t\t\tsetDataUrl('');\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\talert('Enter url your json');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={(evt) => onAddHandler(evt, id)}>\r\n\t\t\t<fieldset>\r\n\t\t\t\t<legend>Add table</legend>\r\n\t\t\t\t<label>\r\n\t\t\t\t\tData Url:\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"dataUrl\"\r\n\t\t\t\t\t\tplaceholder=\"Enter url your json\"\r\n\t\t\t\t\t\tvalue={dataUrl}\r\n\t\t\t\t\t\tonChange={(evt) => setDataUrl(evt.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</label>\r\n\t\t\t\t<button type=\"submit\">Add table</button>\r\n\t\t\t</fieldset>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default Form;\r\n","class Service {\r\n\tasync getData(URL) {\r\n\t\tconst res = await fetch(URL);\r\n\r\n\t\tif (!res.ok) {\r\n\t\t\tthrow new Error(`Could not fetch ${URL}, received ${res.status}`);\r\n\t\t}\r\n\r\n\t\treturn await res.json();\r\n\t}\r\n}\r\n\r\nexport default Service;\r\n","import Form from './Form';\r\n\r\nexport default Form;\r\n","import Preloader from './Preloader';\r\n\r\nexport default Preloader;\r\n","const Preloader = () => {\r\n\treturn <div>Loading...</div>;\r\n};\r\n\r\nexport default Preloader;\r\n","import RowData from './RowData';\r\n\r\nexport default RowData;\r\n","const RowData = ({ table }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{table.table.map((item, index) => (\r\n\t\t\t\t<tr key={item.id}>\r\n\t\t\t\t\t{table.colNames.map((name) => (\r\n\t\t\t\t\t\t<td key={index + '.' + name}>{'' + item[name]}</td>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</tr>\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default RowData;\r\n","import TableData from './TableData';\r\n\r\nexport default TableData;\r\n","import { useContext } from 'react';\r\nimport { DataContext } from '../../context';\r\nimport RowData from '../RowData';\r\n\r\nimport './TableData.css';\r\n\r\nconst TableData = ({ id }) => {\r\n\tconst { data } = useContext(DataContext);\r\n\r\n\treturn (\r\n\t\t<div className=\"table-container\">\r\n\t\t\t{data.tables.map((table) => (\r\n\t\t\t\t<table key={table.id} border=\"1\">\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t{table.id === id ? table.colNames.map((key) => <th key={key}>{key}</th>) : null}\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>{table.id === id ? <RowData id={id} table={table} /> : null}</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TableData;\r\n","import AppData from './AppData';\r\n\r\nexport default AppData;\r\n","import { useContext } from 'react';\r\nimport { DataContext } from '../../context';\r\nimport Form from '../Form';\r\nimport Preloader from '../Preloader';\r\nimport TableData from '../TableData';\r\n\r\nconst AppData = ({ id }) => {\r\n\tconst { isLoad, isRequestSend } = useContext(DataContext);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Form id={id} />\r\n\t\t\t{isLoad ? <TableData id={id} /> : isRequestSend && <Preloader />}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default AppData;\r\n","import { useContext } from 'react';\nimport { DataContext } from '../../context';\nimport AppData from '../AppData';\nimport Form from '../Form';\n\nimport './App.css';\n\nfunction App() {\n\tconst { data } = useContext(DataContext);\n\n\treturn (\n\t\t<main className=\"app\">\n\t\t\t{data.tables.length ? data.tables.map((table) => <AppData key={table.id} id={table.id} />) : null}\n\t\t\t<Form />\n\t\t</main>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport { ContexProvider } from './context';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<ContexProvider>\n\t\t\t<App />\n\t\t</ContexProvider>\n\t</React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}